{"version":3,"file":"static/js/171.b4491ced.chunk.js","mappings":"gSAEaA,EAAgBC,EAAAA,GAAAA,OAAH,icAsBbC,EAAaD,EAAAA,GAAAA,KAAH,8KAUVE,EAAmBF,EAAAA,GAAAA,OAAH,4gBA6BhBG,EAAkBH,EAAAA,GAAAA,MAAH,kP,4BCtDb,SAASI,IACpB,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAQF,EAAaG,IAAI,SAkC/B,OArBAC,EAAAA,EAAAA,YAAU,WAAM,wCAKZ,8GAEiCC,EAAAA,EAAAA,IAAYH,GAF7C,OAGkC,KADpBI,EAFd,QAGuBC,QACXC,MAAM,4DAAD,OAAgBN,EAAhB,0GAETN,EAAUU,GANlB,gDAQQG,EAAAA,GAAAA,MAAY,iEAAgB,CAAEC,SAAU,eARhD,0DALY,sBACE,OAAVR,GADQ,mCAiBZS,KACD,CAACT,KAIA,iCACI,SAACd,EAAD,WACI,UAACE,EAAD,CAAYsB,SAnCH,SAAAC,GACjBA,EAAEC,iBACFb,EAAgB,CAAEC,MAAOW,EAAEE,cAAcC,SAASd,MAAMe,QAEJ,KAAhDJ,EAAEE,cAAcC,SAASd,MAAMe,MAAMC,OAIzCL,EAAEE,cAAcI,QAHZV,EAAAA,GAAAA,MAAY,uIAA+B,CAAEC,SAAU,gBA8BnD,WACI,UAACnB,EAAD,CAAkB6B,KAAK,SAAvB,WACI,SAAC,MAAD,CAAUC,KAAM,KADpB,KAC2B,yCAG3B,SAAC7B,EAAD,CACI4B,KAAK,OACLE,aAAa,MACbC,WAAS,EACTC,YAAY,gBACZC,KAAK,eAKhB9B,EAAOY,OAAS,IACb,wBACKZ,EAAO+B,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OACR,yBACI,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMlC,GAA1C,SAAuD+B,KADlDD","sources":["components/MoviesPage/Searchbar.styled.jsx","components/MoviesPage/MoviesPage.js"],"sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const SearchbarHead = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n` \r\n\r\n\r\n\r\n\r\nexport const SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n` \r\n\r\nexport const SearchFormButton = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n  &:hover {\r\n  opacity: 1;\r\n}\r\nspan {\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n}\r\n`\r\n  \r\n\r\nexport const SearchFormInput = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n&:placeholder {\r\n  font: inherit;\r\n  font-size: 18px;\r\n}\r\n`","import { useSearchParams, useLocation, Link } from 'react-router-dom';\r\nimport { useState, useEffect } from 'react';\r\nimport { SearchMovie } from '../Services/MovieDB';\r\nimport { SearchbarHead, SearchForm, SearchFormButton, SearchFormInput } from './Searchbar.styled';\r\nimport { FcSearch } from 'react-icons/fc';\r\nimport { toast } from 'react-toastify';\r\n\r\n\r\n\r\nexport default function MoviesPage() {\r\n    const [movies, setMovies] = useState([]);\r\n    const location = useLocation();\r\n    const [searchParams, setSearchParams] = useSearchParams();\r\n    const query = searchParams.get('query');\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setSearchParams({ query: e.currentTarget.elements.query.value });\r\n       \r\n        if (e.currentTarget.elements.query.value.trim() === '') {\r\n            toast.error('Все пропало, пиши по новой!', { position: \"top-center\", });\r\n            return;\r\n        }\r\n        e.currentTarget.reset();\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (query === null) {\r\n            return;\r\n        };\r\n\r\n        async function SearchFilms() {\r\n            try {\r\n                const cardSearch = await SearchMovie(query)\r\n                if (cardSearch.length === 0) {\r\n                    alert(`по запросу \"${query}\", фильмов не найдено`)\r\n                };\r\n                setMovies(cardSearch);\r\n            } catch (error) {\r\n                toast.error('Все пропало!', { position: \"top-center\", });\r\n            }\r\n        };\r\n\r\n        SearchFilms();\r\n    }, [query]);\r\n  \r\n\r\n    return (\r\n        <>\r\n            <SearchbarHead >\r\n                <SearchForm onSubmit={handleSubmit}>\r\n                    <SearchFormButton type=\"submit\">\r\n                        <FcSearch size={18} /> <span>Search</span>\r\n                    </SearchFormButton>\r\n\r\n                    <SearchFormInput\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        autoFocus\r\n                        placeholder=\"Search movies\"\r\n                        name=\"query\"\r\n                    />\r\n                </SearchForm>\r\n            </SearchbarHead>\r\n\r\n            {movies.length > 0 && (\r\n                <ul>\r\n                    {movies.map(({ id, title }) => (\r\n                        <li key={id}>\r\n                            <Link to={`/movies/${id}`} state={{ from: location }}>{title}</Link>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            )}\r\n        </>\r\n    )\r\n};"],"names":["SearchbarHead","styled","SearchForm","SearchFormButton","SearchFormInput","MoviesPage","useState","movies","setMovies","location","useLocation","useSearchParams","searchParams","setSearchParams","query","get","useEffect","SearchMovie","cardSearch","length","alert","toast","position","SearchFilms","onSubmit","e","preventDefault","currentTarget","elements","value","trim","reset","type","size","autoComplete","autoFocus","placeholder","name","map","id","title","to","state","from"],"sourceRoot":""}